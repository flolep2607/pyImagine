import re
from pathlib import Path

from pyimagine.aiby import Arta

PARENT = Path('.')


def extract_csv(path: Path) -> [str]:
    # https://inloop.github.io/sqlite-viewer/
    return [row.split(',')[1][1:-1] for row in path.read_text(encoding='utf-8').strip().splitlines()[1:]]


def get_name(value: str) -> str:
    value = re.sub(r'[^A-Za-z0-9_ ]', '', value.strip())
    value = value.replace(' ', '_').replace('__', '_')
    if value.isdigit():
        value = f'S{value}'
    if value[-1] == '_':
        value = value[:-1]
    return value.upper()


if __name__ == '__main__':
    arta = Arta()
    arta.signupNewUser()

    # Import
    model = [
        '# Generated by the firebase web compiler. DO NOT EDIT!',
        f'# source: {Path(__file__).name}', '',
        'from enum import Enum', ''
    ]

    # Banned (InputPromptDatabase.db)
    model.append('# Banned')
    model.append('NSFW = {}'.format(extract_csv(PARENT / 'exported_nsfwdb_db.csv')))
    model.append('NSFW_NEGATIVE = {}'.format(extract_csv(PARENT / 'exported_nsfwnegativedb_db.csv')))
    model.append('\n')

    # Ratio
    model.append('# KEY = ratio')
    model.append('class Ratio(Enum):')
    # ratios = ['1:1', '4:3', '3:2', '2:3', '16:9', '9:16', '5:4', '4:5', '3:1', '3:4']
    for ratio in ['1:1', '2:3']:
        name = f'R{ratio}'.replace(':', 'X')
        model.append(f'\t{name} = \'{ratio}\'')
    model.append('\n')

    # @Info: Avoid enum double
    keys = []

    # Inspiration
    model.append('# KEY = (style_id, prompt)')
    model.append('class Inspiration(Enum):')
    for data in arta.inspired()['data']:
        prompt = data['original_prompt'].strip()
        style = data['style']
        name = get_name(style + '_' + prompt.split('.')[0].split(',')[0].strip())
        if name not in keys:
            keys.append(name)
            model.append(f'\t{name} = {(style, prompt)}')
    model.append('\n')

    # Selfie
    selfie_man = []
    selfie_woman = []
    for selfie in arta.selfie_info()['selfies']:
        data = arta.selfie_info(selfie_id=selfie['path'])
        style = data['style']
        name = get_name(selfie['path'])

        for genre in ['man', 'woman']:
            prompt = data['prompt'][genre]
            line = f'\t{name} = {(style, prompt)}'
            if genre == 'man' and line not in selfie_man:
                selfie_man.append(line)
            elif line not in selfie_woman:
                selfie_woman.append(line)

    model.append('# KEY = (style_id, prompt)')
    model.append('class SelfieMan(Enum):')
    model += selfie_man
    model.append('\n')

    model.append('# KEY = (style_id, prompt)')
    model.append('class SelfieWoman(Enum):')
    model += selfie_woman
    model.append('\n')

    # Styles
    model.append('# KEY = style_id')
    model.append('class Style(Enum):')
    for style in arta.styles_info()['styles']:
        data = arta.styles_info(style_id=style['path'])
        style = data['style']
        name = get_name(style)
        model.append(f'\t{name} = \'{style}\'')
    model.append('\n')

    path = PARENT / 'constants.py'
    path.write_text('\n'.join(model), encoding='utf-8')
    print(f'I: Created: {path}')
